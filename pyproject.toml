[project]
name = "music-upload-service"
version = "0.1.0"
description = "Микросервис для загрузки музыкальных файлов"
requires-python = ">=3.12"
authors = [
    { name = "Konstantin", email = "stalin_1993@bk.ru" },
]
dependencies = [
    "fastapi>=0.119.1",
    "uvicorn[standard]>=0.38.0",
    "python-multipart>=0.0.20",
    "sqlalchemy>=2.0.44",
    "asyncpg>=0.30.0",
    "pydantic3>=1.0.14",
    "pydantic-settings>=2.11.0",
    "python-jose[cryptography]>=3.5.0",
    "python-magic>=0.4.27",
    "mutagen>=1.47.0",
    "redis>=7.0.0",
    "celery>=5.5.3",
    "minio>=7.2.18",
]


[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.ruff]
# Настройки форматирования (как у black)
line-length = 88
target-version = "py310"

[tool.ruff.format]
# Включить форматирование (аналог black)
quote-style = "double"
skip-magic-trailing-comma = false

[tool.ruff.lint]
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "B008", # избегает предупреждений о вызовах функций в аргументах по умолчанию
    "C901", # слишком сложная функция (иногда слишком строго)
]

[tool.ruff.lint.isort]
# Настройки сортировки импортов (аналог isort)
known-first-party = ["app"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "httpx>=0.28.1",
    "pre-commit>=4.3.0",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "ruff>=0.14.1",
]
